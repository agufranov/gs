/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as RoundsRouteImport } from './routes/rounds'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoundIdRouteImport } from './routes/round.$id'

const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const RoundsRoute = RoundsRouteImport.update({
  id: '/rounds',
  path: '/rounds',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoundIdRoute = RoundIdRouteImport.update({
  id: '/round/$id',
  path: '/round/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rounds': typeof RoundsRoute
  '/signIn': typeof SignInRoute
  '/round/$id': typeof RoundIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rounds': typeof RoundsRoute
  '/signIn': typeof SignInRoute
  '/round/$id': typeof RoundIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/rounds': typeof RoundsRoute
  '/signIn': typeof SignInRoute
  '/round/$id': typeof RoundIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/rounds' | '/signIn' | '/round/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/rounds' | '/signIn' | '/round/$id'
  id: '__root__' | '/' | '/rounds' | '/signIn' | '/round/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RoundsRoute: typeof RoundsRoute
  SignInRoute: typeof SignInRoute
  RoundIdRoute: typeof RoundIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rounds': {
      id: '/rounds'
      path: '/rounds'
      fullPath: '/rounds'
      preLoaderRoute: typeof RoundsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/round/$id': {
      id: '/round/$id'
      path: '/round/$id'
      fullPath: '/round/$id'
      preLoaderRoute: typeof RoundIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RoundsRoute: RoundsRoute,
  SignInRoute: SignInRoute,
  RoundIdRoute: RoundIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
