// deno-fmt-ignore-file
import * as V from './_externals.mjs';
import { EmitGuard as E, Guard as G } from '../../guard/index.mjs';
// ------------------------------------------------------------------
// Build
// ------------------------------------------------------------------
export function BuildRefine(context, schema, value) {
    const refinements = V.CreateExternalVariable(schema['~refine'].map((refinement) => refinement));
    return E.Call(E.Member(refinements, 'every'), [E.ArrowFunction(['refinement'], E.Call(E.Member('refinement', 'callback'), [value]))]);
}
// ------------------------------------------------------------------
// Check
// ------------------------------------------------------------------
export function CheckRefine(context, schema, value) {
    return G.Every(schema['~refine'], (refinement) => refinement.callback(value));
}
// ------------------------------------------------------------------
// Error
// ------------------------------------------------------------------
export function ErrorRefine(context, schemaPath, instancePath, schema, value) {
    return G.EveryAll(schema['~refine'], (refinement, index) => {
        return refinement.callback(value) || context.AddError({
            keyword: '~refine',
            schemaPath,
            instancePath,
            params: { index, message: refinement.message },
        });
    });
}
